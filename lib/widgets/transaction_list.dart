import 'package:flutter/material.dart';import 'package:intl/intl.dart';import 'package:personalexpensesapp/models/transaction.dart';class TransactionList extends StatelessWidget {  final List<Transaction> transactions;  final Function deleteTx;  NumberFormat format = NumberFormat.simpleCurrency();  TransactionList(this.transactions, this.deleteTx);  @override  Widget build(BuildContext context) {    return Container(      height: MediaQuery.of(context).size.height,      margin: const EdgeInsets.symmetric(horizontal: 10, vertical: 8),      child: transactions.isEmpty          ? Center(              child: Column(                children: <Widget>[                  Container(                    height: 140,                    child: Icon(                      Icons.add_box,                      color: Theme.of(context).primaryColor,                    ),                  ),                  Text("No transactions added..",                      style: Theme.of(context).textTheme.title),                ],              ),            )          : ListView.builder(              itemCount: transactions.length,              itemBuilder: (BuildContext context, int index) {                return Card(                  elevation: 5,                    color: Colors.white,                    shadowColor: Colors.white70,                    child: ListTile(                    leading: CircleAvatar(                      radius: 30,                      child: Padding(                        padding: const EdgeInsets.all(6.0),                        child: Text(                          '\$${transactions[index].amount.toStringAsFixed(2)}',                          style: TextStyle(fontSize: 14, color: Colors.white),                        ),                      ),                    ),                    title: Text(transactions[index].title,                        style: TextStyle(                            fontSize: 16,                            fontWeight: FontWeight.bold,                            color: Colors.black)),                    subtitle: Text(                      DateFormat.yMMMd().format(transactions[index].date),                      style: TextStyle(fontSize: 14, color: Colors.grey),                    ),                    trailing: MediaQuery.of(context).size.width > 360                        ? FlatButton.icon(                            onPressed: deleteTx(index),                            icon: Icon(Icons.delete, color: Colors.red, size: 36,),                            label: Text('delete'),                            textColor: Colors.red,                          )                        : IconButton(                            onPressed: () {                              print("delete item.. $index");                              print(                                  "delete item.. ${transactions[index].title}");//                            deleteTx(transactions[index].id);                              deleteTx(index);                            },                            icon: Icon(Icons.delete, color: Colors.red, size: 28,),                          )));//                Card(//                  color: Colors.white,//                  margin: EdgeInsets.symmetric(vertical: 6),//                  elevation: 8,//                  child: Padding(//                    padding: EdgeInsets.all(10.0),//                    child: Row(//                      mainAxisSize: MainAxisSize.min,//                      crossAxisAlignment: CrossAxisAlignment.center,//                      children: <Widget>[//                        Padding(//                          padding: const EdgeInsets.all(5.0),////                          decoration: BoxDecoration(////                            border: Border.all(color: Colors.purple, width: 1),////                          ),//                          child: CircleAvatar(//                            radius: 35,//                            child: Text(//                              '\$${transactions[index].amount.toStringAsFixed(2)}',//                              style://                                  TextStyle(fontSize: 14, color: Colors.white),//                            ),//                          ),//                        ),//                        SizedBox(//                          width: 12,//                        ),//                        Expanded(//                          child: Column(//                            crossAxisAlignment: CrossAxisAlignment.start,//                            children: <Widget>[//                              Text(transactions[index].title,//                                  style: TextStyle(//                                      fontSize: 16,//                                      fontWeight: FontWeight.bold,//                                      color: Colors.black)),//                              SizedBox(//                                height: 5,//                              ),//                              Text(//                                DateFormat.yMMMd()//                                    .format(transactions[index].date),//                                style://                                    TextStyle(fontSize: 14, color: Colors.grey),//                              ),//                            ],//                          ),//                        ),//                        MediaQuery.of(context).size.width > 360//                            ? FlatButton.icon(//                                onPressed: deleteTx(index),//                                icon: Icon(//                                  Icons.delete,//                                  color: Colors.red,//                                  size: 36,//                                ),//                                label: Text('delete'),//                                textColor: Colors.red,//                              )//                            : IconButton(//                                onPressed: () {//                                  print("delete item.. $index");//                                  print(//                                      "delete item.. ${transactions[index].title}");////                            deleteTx(transactions[index].id);//                                  deleteTx(index);//                                },//                                icon: Icon(//                                  Icons.delete,//                                  color: Colors.red,//                                  size: 28,//                                ),//                              )//                      ],//                    ),//                  ),//                );              },            ),    );  }}